$#include "shapes.h"

$ int interp_coord(int nen, int ndm, double* nodex, double* x)
$ {
$     double N[64];
$     double dNdx[192];
$     if (ndm == 1 && (nen == 2 || nen == 3 || nen == 4))
$         shape1d(nen-1, N, dNdx, *x);
$     if (ndm == 2 && (nen == 4 || nen == 9 || nen == 16))
$         shape2d(nen, N, dNdx, x);
$     else if (ndm == 3 && (nen == 8 || nen == 27 || nen == 64))
$         shape3d(nen, N, dNdx, x);
$     else
$         return -1;
$
$     double xx[3] = {0, 0, 0};
$     for (int j = 0; j < nen; ++j)
$         for (int i = 0; i < ndm; ++i)
$             xx[i] += N[j]*nodex[ndm*j+i];
$     for (int i = 0; i < ndm; ++i)
$         x[i] = xx[i];
$     return 0;
$ }

int interp_coord(int nen, int ndm, double nodex[ndm*nen], double x[ndm]);

$[
-- Redefine interp_coord nicely for Lua

local interp_coord1 = interp_coord
function interp_coord(nodex, x)
  local ndm = table.getn(x)
  local nen = table.getn(nodex) / ndm
  if interp_coord1(nen, ndm, nodex, x) < 0 then
    print("ndm = ", ndm)
    print("nen = ", nen)
    table.foreach(nodex, print)
    error("Bad call to interp_coord")
  end
end

$]
