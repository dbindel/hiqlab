//
// time: Sun Jan 21 17:59:10 2007
//
// version: 3.2.0 (format), 4.4.4 (DX)
//
//
// MODULE main
// page assignment: ColorField	order=4, windowed=0, showing=1
// page assignment: Connections	order=3, windowed=0, showing=0
// page assignment: Displacement	order=5, windowed=0, showing=0
// page assignment: ImportFile	order=2, windowed=0, showing=0
// workspace: width = 672, height = 712
// layout: snap = 1, width = 50, height = 50, align = UL
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 150, y = 0, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home/tkoyama/programs/hiqlab/models/developing/mich_la_free_beam/2d/mich2d.dx"
    // output[2]: visible = 1, type = 32, value = "mich2d.dx"
    // page group: ImportFile
    //
    // 
    // node Import[1]: x = 350, y = 50, inputs = 6, label = Import
    // input[1]: defaulting = 1, visible = 1, type = 32, value = "/home/tkoyama/academics/research/HIQLAB/hiqlab/models/tutorial/patch_test/patch_test_dx.dx"
    // page group: ImportFile
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Mark[2]: x = 550, y = 50, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: ImportFile
    //
main_Mark_2_out_1 = 
    Mark(
    main_Import_1_out_1,
    main_Mark_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Scalar[3]: x = 750, y = 0, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 100000.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 100000.0 
    // page group: ImportFile
    //
    // 
    // node Compute[7]: x = 650, y = 50, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*$1"
    // page group: ImportFile
    // expression: value = a*b
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_7_out_1 = 
    Compute(
    main_Compute_7_in_1,
    main_Mark_2_out_1,
    main_Scalar_3_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Unmark[2]: x = 900, y = 50, inputs = 2, label = Unmark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: ImportFile
    //
main_Unmark_2_out_1 = 
    Unmark(
    main_Compute_7_out_1,
    main_Unmark_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[5]: x = 400, y = 150, inputs = 1, label = transmit_displacements
    // page group: ImportFile
    //
transmit_displacements = main_Unmark_2_out_1;
    // 
    // node Receiver[5]: x = 300, y = 0, inputs = 1, label = transmit_displacements
    // page group: Displacement
    //
main_Receiver_5_out_1[cache: 0] = transmit_displacements;
    // 
    // node Mark[1]: x = 150, y = 100, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: Displacement
    //
main_Mark_1_out_1 = 
    Mark(
    main_Receiver_5_out_1,
    main_Mark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[2]: x = 200, y = 100, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1000000.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1000000.0 
    // page group: Displacement
    //
    // 
    // node Rename[2]: x = 450, y = 100, inputs = 3, label = Rename
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "displacements"
    // page group: Displacement
    //
main_Rename_2_out_1 = 
    Rename(
    main_Receiver_5_out_1,
    main_Rename_2_in_2,
    main_Rename_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Integer[1]: x = 550, y = 50, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 0
    // page group: Displacement
    //
    // 
    // node Integer[2]: x = 650, y = 50, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_2"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 360 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1000000
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 360 
    // page group: Displacement
    //
    // 
    // node Sequencer[1]: x = 550, y = 150, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 360
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 5
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 360 5 0 360 1 }
    // page group: Displacement
    // vcr[1]: min = 0, max = 360, beg = 0, end = 360, cur = 0, inc = 5, loop = on, step = off, pal = off
    // window: position = (0.0100,0.0067), size = 0.2731x0.1042
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Integer_1_out_1,
    main_Integer_2_out_1,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Rename[5]: x = 350, y = 100, inputs = 3, label = Rename
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "displacementsi"
    // page group: Displacement
    //
main_Rename_5_out_1 = 
    Rename(
    main_Receiver_5_out_1,
    main_Rename_5_in_2,
    main_Rename_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node Compute[3]: x = 250, y = 200, inputs = 6, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0 + $1*($2*cos($3*3.14/180) - $4*sin($3*3.14/180))"
    // page group: Displacement
    // expression: value = data + scaling*(displacements*cos(degree*3.14/180) - displacementsi*sin(degree*3.14/180))
    // name[2]: value = data
    // name[3]: value = scaling
    // name[4]: value = displacements
    // name[5]: value = degree
    // name[6]: value = displacementsi
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Mark_1_out_1,
    main_Scalar_2_out_1,
    main_Rename_2_out_1,
    main_Sequencer_1_out_1,
    main_Rename_5_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Unmark[1]: x = 300, y = 300, inputs = 2, label = Unmark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: Displacement
    //
main_Unmark_1_out_1 = 
    Unmark(
    main_Compute_3_out_1,
    main_Unmark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[8]: x = 150, y = 400, inputs = 1, label = wireless_8
    // page group: Displacement
    //
wireless_8 = main_Unmark_1_out_1;
    // 
    // node Receiver[8]: x = 0, y = 300, inputs = 1, label = wireless_8
    // page group: ColorField
    //
main_Receiver_8_out_1[cache: 0] = wireless_8;
    // 
    // node String[2]: x = 300, y = 0, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "field0"
    // page group: ColorField
    //
    // 
    // node Rename[3]: x = 350, y = 200, inputs = 3, label = Rename
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "field0"
    // page group: ColorField
    //
main_Rename_3_out_1 = 
    Rename(
    main_Receiver_8_out_1,
    main_String_2_out_1,
    main_Rename_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[7]: x = 550, y = 250, inputs = 1, label = wireless_7
    // page group: Displacement
    //
wireless_7 = main_Sequencer_1_out_1;
    // 
    // node Receiver[7]: x = 550, y = 0, inputs = 1, label = wireless_7
    // page group: ColorField
    //
main_Receiver_7_out_1[cache: 0] = wireless_7;
    // 
    // node String[3]: x = 400, y = 0, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "fieldi0"
    // page group: ColorField
    //
    // 
    // node Rename[4]: x = 450, y = 200, inputs = 3, label = Rename
    // page group: ColorField
    //
main_Rename_4_out_1 = 
    Rename(
    main_Receiver_8_out_1,
    main_String_3_out_1,
    main_Rename_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Compute[6]: x = 600, y = 300, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*cos($1*3.14/180) - $2*sin($1*3.14/180)"
    // page group: ColorField
    // expression: value = a*cos(degree*3.14/180) - c*sin(degree*3.14/180)
    // name[2]: value = a
    // name[3]: value = degree
    // name[4]: value = c
    //
main_Compute_6_out_1 = 
    Compute(
    main_Compute_6_in_1,
    main_Rename_3_out_1,
    main_Receiver_7_out_1,
    main_Rename_4_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Compute[5]: x = 500, y = 350, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*0"
    // page group: ColorField
    // expression: value = a*0
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_5_out_1 = 
    Compute(
    main_Compute_5_in_1,
    main_Compute_6_out_1,
    main_Compute_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node AutoGlyph[3]: x = 500, y = 450, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "cube"
    // input[4]: defaulting = 0, visible = 1, type = 5, value = .1
    // page group: ColorField
    //
main_AutoGlyph_3_out_1 = 
    AutoGlyph(
    main_Compute_5_out_1,
    main_AutoGlyph_3_in_2,
    main_AutoGlyph_3_in_3,
    main_AutoGlyph_3_in_4,
    main_AutoGlyph_3_in_5,
    main_AutoGlyph_3_in_6,
    main_AutoGlyph_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[1]: x = 50, y = 150, inputs = 1, label = transmit_connections
    // page group: ImportFile
    //
transmit_connections = main_Unmark_2_out_1;
    // 
    // node Receiver[1]: x = 150, y = 50, inputs = 1, label = transmit_connections
    // page group: Connections
    //
main_Receiver_1_out_1[cache: 0] = transmit_connections;
    // 
    // node ShowBoundary[1]: x = 350, y = 150, inputs = 2, label = ShowBoundary
    // page group: Connections
    //
main_ShowBoundary_1_out_1 = 
    ShowBoundary(
    main_Receiver_1_out_1,
    main_ShowBoundary_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 150, y = 350, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "red"
    // page group: Connections
    //
main_Color_1_out_1 = 
    Color(
    main_ShowBoundary_1_out_1,
    main_Color_1_in_2,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[2]: x = 150, y = 450, inputs = 1, label = receive_connections
    // page group: Connections
    //
receive_connections = main_Color_1_out_1;
    // 
    // node Receiver[2]: x = 50, y = 250, inputs = 1, label = receive_connections
    // page group: ImportFile
    //
main_Receiver_2_out_1[cache: 0] = receive_connections;
    // 
    // node Colormap[2]: x = 400, y = 350, inputs = 19, label = Colormap
    // input[1]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 0.64210526] [0.40148699 0.63398693] [0.59851301 0.0] [1.0 0.0] }
    // input[2]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[4]: defaulting = 0, visible = 0, type = 16777224, value = { [0.0 1.0] [1.0 1.0] }
    // input[5]: defaulting = 0, visible = 0, type = 32, value = "Colormap_2"
    // input[7]: defaulting = 1, visible = 0, type = 5, value = -1e-07
    // input[8]: defaulting = 1, visible = 0, type = 5, value = 1e-07
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 20
    // input[12]: defaulting = 0, visible = 0, type = 16777221, value = { -1e-07 1e-07 }
    // input[17]: defaulting = 0, visible = 0, type = 5, value = -0.0046788785
    // input[18]: defaulting = 0, visible = 0, type = 5, value = -0.0
    // page group: ColorField
    // window: position = (0.2219,0.0075), size = 0.6350x0.5858
    //
main_Colormap_2_out_1[cache: 2],
main_Colormap_2_out_2[cache: 2] = 
    Colormap(
    main_Colormap_2_in_1,
    main_Colormap_2_in_2,
    main_Colormap_2_in_3,
    main_Colormap_2_in_4,
    main_Colormap_2_in_5,
    main_Colormap_2_in_6,
    main_Colormap_2_in_7,
    main_Colormap_2_in_8,
    main_Colormap_2_in_9,
    main_Colormap_2_in_10,
    main_Colormap_2_in_11,
    main_Colormap_2_in_12,
    main_Colormap_2_in_13,
    main_Colormap_2_in_14,
    main_Colormap_2_in_15,
    main_Colormap_2_in_16,
    main_Colormap_2_in_17,
    main_Colormap_2_in_18,
    main_Colormap_2_in_19
    ) [instance: 2, cache: 1];
    // 
    // node ColorBar[2]: x = 150, y = 550, inputs = 16, label = ColorBar
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0.0 0.3]
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [200 10]
    // input[15]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[16]: defaulting = 0, visible = 0, type = 1, value = 10
    // page group: ColorField
    //
main_ColorBar_2_out_1 = 
    ColorBar(
    main_Colormap_2_out_1,
    main_ColorBar_2_in_2,
    main_ColorBar_2_in_3,
    main_ColorBar_2_in_4,
    main_ColorBar_2_in_5,
    main_ColorBar_2_in_6,
    main_ColorBar_2_in_7,
    main_String_2_out_1,
    main_ColorBar_2_in_9,
    main_ColorBar_2_in_10,
    main_ColorBar_2_in_11,
    main_ColorBar_2_in_12,
    main_ColorBar_2_in_13,
    main_ColorBar_2_in_14,
    main_ColorBar_2_in_15,
    main_ColorBar_2_in_16
    ) [instance: 2, cache: 1];
    // 
    // node Color[8]: x = 350, y = 550, inputs = 5, label = Color
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "white"
    // input[3]: defaulting = 1, visible = 1, type = 5, value = 0.1
    // page group: ColorField
    //
main_Color_8_out_1 = 
    Color(
    main_Compute_6_out_1,
    main_Colormap_2_out_1,
    main_Colormap_2_out_2,
    main_Color_8_in_4,
    main_Color_8_in_5
    ) [instance: 8, cache: 1];
    // 
    // node Color[7]: x = 550, y = 550, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "white"
    // page group: ColorField
    //
main_Color_7_out_1 = 
    Color(
    main_AutoGlyph_3_out_1,
    main_Color_7_in_2,
    main_Color_7_in_3,
    main_Color_7_in_4,
    main_Color_7_in_5
    ) [instance: 7, cache: 1];
    // 
    // node Collect[2]: x = 350, y = 650, inputs = 3, label = Collect
    // page group: ColorField
    //
main_Collect_2_out_1 = 
    Collect(
    main_ColorBar_2_out_1,
    main_Color_8_out_1,
    main_Color_7_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[4]: x = 500, y = 650, inputs = 1, label = receive_colorfield
    // page group: ColorField
    //
receive_colorfield = main_Collect_2_out_1;
    // 
    // node Receiver[4]: x = 250, y = 250, inputs = 1, label = receive_colorfield
    // page group: ImportFile
    //
main_Receiver_4_out_1[cache: 0] = receive_colorfield;
    // 
    // node ShowConnections[2]: x = 300, y = 400, inputs = 1, label = ShowConnections
    // page group: Displacement
    //
main_ShowConnections_2_out_1 = 
    ShowConnections(
    main_Unmark_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Color[5]: x = 300, y = 500, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "yellow"
    // page group: Displacement
    //
main_Color_5_out_1 = 
    Color(
    main_ShowConnections_2_out_1,
    main_Color_5_in_2,
    main_Color_5_in_3,
    main_Color_5_in_4,
    main_Color_5_in_5
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[6]: x = 300, y = 600, inputs = 1, label = receive_displacements
    // page group: Displacement
    //
receive_displacements = main_Color_5_out_1;
    // 
    // node Receiver[6]: x = 400, y = 250, inputs = 1, label = receive_displacements
    // page group: ImportFile
    //
main_Receiver_6_out_1[cache: 0] = receive_displacements;
    // 
    // node Text[1]: x = 600, y = 250, inputs = 6, label = Text
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0.5 -2.0 0]
    // page group: ImportFile
    //
main_Text_1_out_1 = 
    Text(
    main_FileSelector_1_out_2,
    main_Text_1_in_2,
    main_Text_1_in_3,
    main_Text_1_in_4,
    main_Text_1_in_5,
    main_Text_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 300, y = 400, inputs = 5, label = Collect
    // input[5]: visible = 0
    // page group: ImportFile
    //
main_Collect_1_out_1 = 
    Collect(
    main_Receiver_2_out_1,
    main_Receiver_4_out_1,
    main_Receiver_6_out_1,
    main_Text_1_out_1,
    main_Collect_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Image[1]: x = 300, y = 500, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_1"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [1.69347 0 0]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [1.59705 0.192839 24.2971]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 13.0213
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 1008
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.768
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [1.5747e-05 0.999969 -0.0079364]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // page group: ImportFile
    // depth: value = 24
    // window: position = (0.0137,0.1908), size = 0.6388x0.6800
    // internal caching: 1
    //
main_Image_1_out_1,
main_Image_1_out_2,
main_Image_1_out_3 = 
    Image(
    main_Image_1_in_1,
    main_Collect_1_out_1,
    main_Image_1_in_3,
    main_Image_1_in_4,
    main_Image_1_in_5,
    main_Image_1_in_6,
    main_Image_1_in_7,
    main_Image_1_in_8,
    main_Image_1_in_9,
    main_Image_1_in_10,
    main_Image_1_in_11,
    main_Image_1_in_12,
    main_Image_1_in_13,
    main_Image_1_in_14,
    main_Image_1_in_15,
    main_Image_1_in_16,
    main_Image_1_in_17,
    main_Image_1_in_18,
    main_Image_1_in_19,
    main_Image_1_in_20,
    main_Image_1_in_21,
    main_Image_1_in_22,
    main_Image_1_in_23,
    main_Image_1_in_24,
    main_Image_1_in_25,
    main_Image_1_in_26,
    main_Image_1_in_27,
    main_Image_1_in_28,
    main_Image_1_in_29,
    main_Image_1_in_30,
    main_Image_1_in_31,
    main_Image_1_in_32,
    main_Image_1_in_33,
    main_Image_1_in_34,
    main_Image_1_in_35,
    main_Image_1_in_36,
    main_Image_1_in_37,
    main_Image_1_in_38,
    main_Image_1_in_39,
    main_Image_1_in_40,
    main_Image_1_in_41,
    main_Image_1_in_42,
    main_Image_1_in_43,
    main_Image_1_in_44,
    main_Image_1_in_45,
    main_Image_1_in_46,
    main_Image_1_in_47,
    main_Image_1_in_48,
    main_Image_1_in_49
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[3]: x = 250, y = 150, inputs = 1, label = transmit_colorfield
    // page group: ImportFile
    //
transmit_colorfield = main_Unmark_2_out_1;
    // 
    // node Receiver[3]: x = 0, y = 200, inputs = 1, label = transmit_colorfield
    // page group: ColorField
    //
main_Receiver_3_out_1[cache: 0] = transmit_colorfield;
    // 
    // node ShowConnections[1]: x = 150, y = 150, inputs = 1, label = ShowConnections
    // page group: Connections
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_ShowConnections_1_in_1
    ) [instance: 1, cache: 1];
// network: end of macro body
CacheScene(main_Image_1_in_1, main_Image_1_out_1, main_Image_1_out_2);
}
main_FileSelector_1_out_1 = "/home/tkoyama/programs/hiqlab/models/developing/mich_la_free_beam/2d/mich2d.dx";
main_FileSelector_1_out_2 = "mich2d.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Mark_2_in_2 = "positions";
main_Mark_2_out_1 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 100000.0 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 100000.0 ;
main_Compute_7_in_1 = "$0*$1";
main_Compute_7_out_1 = NULL;
main_Unmark_2_in_2 = "positions";
main_Unmark_2_out_1 = NULL;
main_Transmitter_5_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_Mark_1_in_2 = "positions";
main_Mark_1_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 1000000.0 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 1000000.0 ;
main_Rename_2_in_2 = "displacements";
main_Rename_2_in_3 = NULL;
main_Rename_2_out_1 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 0;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 0;
main_Integer_2_in_1 = "Integer_2";
main_Integer_2_in_2 = NULL;
main_Integer_2_in_3 = 360 ;
main_Integer_2_in_4 = NULL;
main_Integer_2_in_5 = NULL;
main_Integer_2_in_6 = NULL;
main_Integer_2_in_7 = NULL;
main_Integer_2_in_8 = NULL;
main_Integer_2_in_9 = NULL;
main_Integer_2_in_10 = NULL;
main_Integer_2_in_11 = NULL;
main_Integer_2_out_1 = 360 ;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 360 5 0 360 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 360;
@deltaframe = 5;
main_Rename_5_in_2 = "displacementsi";
main_Rename_5_in_3 = NULL;
main_Rename_5_out_1 = NULL;
main_Compute_3_in_1 = "$0 + $1*($2*cos($3*3.14/180) - $4*sin($3*3.14/180))";
main_Compute_3_out_1 = NULL;
main_Unmark_1_in_2 = "positions";
main_Unmark_1_out_1 = NULL;
main_Transmitter_8_out_1 = NULL;
main_Receiver_8_out_1 = NULL;
main_String_2_out_1 = "field0";
main_Rename_3_in_3 = NULL;
main_Rename_3_out_1 = NULL;
main_Transmitter_7_out_1 = NULL;
main_Receiver_7_out_1 = NULL;
main_String_3_out_1 = "fieldi0";
main_Rename_4_in_3 = NULL;
main_Rename_4_out_1 = NULL;
main_Compute_6_in_1 = "$0*cos($1*3.14/180) - $2*sin($1*3.14/180)";
main_Compute_6_out_1 = NULL;
main_Compute_5_in_1 = "$0*0";
main_Compute_5_in_3 = NULL;
main_Compute_5_out_1 = NULL;
main_AutoGlyph_3_in_2 = "cube";
main_AutoGlyph_3_in_3 = NULL;
main_AutoGlyph_3_in_4 = .1;
main_AutoGlyph_3_in_5 = NULL;
main_AutoGlyph_3_in_6 = NULL;
main_AutoGlyph_3_in_7 = NULL;
main_AutoGlyph_3_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_ShowBoundary_1_in_2 = NULL;
main_ShowBoundary_1_out_1 = NULL;
main_Color_1_in_2 = "red";
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Transmitter_2_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_Colormap_2_in_1 = { [0.0 0.64210526] [0.40148699 0.63398693] [0.59851301 0.0] [1.0 0.0] };
main_Colormap_2_in_2 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_3 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_4 = { [0.0 1.0] [1.0 1.0] };
main_Colormap_2_in_5 = "Colormap_2";
main_Colormap_2_in_6 = NULL;
main_Colormap_2_in_7 = NULL;
main_Colormap_2_in_8 = NULL;
main_Colormap_2_in_9 = NULL;
main_Colormap_2_in_10 = NULL;
main_Colormap_2_in_11 = NULL;
main_Colormap_2_in_12 = { -1e-07 1e-07 };
main_Colormap_2_in_13 = NULL;
main_Colormap_2_in_14 = NULL;
main_Colormap_2_in_15 = NULL;
main_Colormap_2_in_16 = NULL;
main_Colormap_2_in_17 = -0.0046788785;
main_Colormap_2_in_18 = -0.0;
main_Colormap_2_in_19 = NULL;
main_Colormap_2_out_1 = NULL;
main_Colormap_2_out_2 = NULL;
main_ColorBar_2_in_2 = [0.0 0.3];
main_ColorBar_2_in_3 = [200 10];
main_ColorBar_2_in_4 = NULL;
main_ColorBar_2_in_5 = NULL;
main_ColorBar_2_in_6 = NULL;
main_ColorBar_2_in_7 = NULL;
main_ColorBar_2_in_9 = NULL;
main_ColorBar_2_in_10 = NULL;
main_ColorBar_2_in_11 = NULL;
main_ColorBar_2_in_12 = NULL;
main_ColorBar_2_in_13 = NULL;
main_ColorBar_2_in_14 = NULL;
main_ColorBar_2_in_15 = 1;
main_ColorBar_2_in_16 = 10;
main_ColorBar_2_out_1 = NULL;
main_Color_8_in_4 = NULL;
main_Color_8_in_5 = NULL;
main_Color_8_out_1 = NULL;
main_Color_7_in_2 = "white";
main_Color_7_in_3 = NULL;
main_Color_7_in_4 = NULL;
main_Color_7_in_5 = NULL;
main_Color_7_out_1 = NULL;
main_Collect_2_out_1 = NULL;
main_Transmitter_4_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_ShowConnections_2_out_1 = NULL;
main_Color_5_in_2 = "yellow";
main_Color_5_in_3 = NULL;
main_Color_5_in_4 = NULL;
main_Color_5_in_5 = NULL;
main_Color_5_out_1 = NULL;
main_Transmitter_6_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_Text_1_in_2 = [0.5 -2.0 0];
main_Text_1_in_3 = NULL;
main_Text_1_in_4 = NULL;
main_Text_1_in_5 = NULL;
main_Text_1_in_6 = NULL;
main_Text_1_out_1 = NULL;
main_Collect_1_in_5 = NULL;
main_Collect_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_1_in_1 = "Image_1";
main_Image_1_in_3 = "X24,,";
main_Image_1_in_4 = 1;
main_Image_1_in_5 = [1.69347 0 0];
main_Image_1_in_6 = [1.59705 0.192839 24.2971];
main_Image_1_in_7 = 13.0213;
main_Image_1_in_8 = 1008;
main_Image_1_in_9 = 0.768;
main_Image_1_in_10 = [1.5747e-05 0.999969 -0.0079364];
main_Image_1_in_11 = NULL;
main_Image_1_in_12 = 0;
main_Image_1_in_13 = NULL;
main_Image_1_in_14 = 1;
main_Image_1_in_15 = NULL;
main_Image_1_in_16 = NULL;
main_Image_1_in_17 = NULL;
main_Image_1_in_18 = NULL;
main_Image_1_in_19 = 0;
main_Image_1_in_20 = NULL;
main_Image_1_in_21 = NULL;
main_Image_1_in_22 = NULL;
main_Image_1_in_23 = NULL;
main_Image_1_in_25 = NULL;
main_Image_1_in_26 = NULL;
main_Image_1_in_27 = NULL;
main_Image_1_in_28 = NULL;
main_Image_1_in_29 = NULL;
main_Image_1_in_30 = NULL;
main_Image_1_in_31 = NULL;
main_Image_1_in_32 = NULL;
main_Image_1_in_33 = NULL;
main_Image_1_in_34 = NULL;
main_Image_1_in_35 = NULL;
main_Image_1_in_36 = NULL;
main_Image_1_in_37 = NULL;
main_Image_1_in_38 = NULL;
main_Image_1_in_39 = NULL;
main_Image_1_in_40 = NULL;
main_Image_1_in_41 = "rotate";
main_Image_1_in_42 = NULL;
main_Image_1_in_43 = NULL;
main_Image_1_in_44 = NULL;
main_Image_1_in_45 = NULL;
main_Image_1_in_46 = NULL;
main_Image_1_in_47 = NULL;
main_Image_1_in_48 = NULL;
main_Image_1_in_49 = NULL;
main_Transmitter_3_out_1 = NULL;
main_ShowConnections_1_in_1 = NULL;
Executive("product version 4 4 4");
$sync

sequence main();
play;
